install.packages('caret')
install.packages('caret', dependencies=c('Depends', 'suggests')
install.packages('ggplot2')
install.packages('devtools') 
install.packages('plotrix') 
install.packages('NbClust') 
install.packages('factoextra') 
install.packages('reprex')

#loading packages
library(caret)
library(devtools) 
library(plotrix)
library(NbClust) 
library(factoextra)
library(reprex)
library(readr)

#load from csv
Filename <- 'C:/Users/ajayiiol/Desktop/RUG/Mall_Customers.csv'
#load from your local directory 
Mall_Customers <- read.csv(Filename, header=FALSE)
colnames(Mall_Customers) <- c('CustomerID', 'Gender','Age', 'Annual_Income','Spending_Score')

bkpMall_Customers <- Mall_Customers

#Filling missing values with the sum of it rows
Mall_Customers  <- rowSums(which(is.na(Mall_Customers ), arr.ind=TRUE))

#Filling missing values with a fixed value
Mall_Customers [is.na(Mall_Customers )] <- 0

#Filling missing values with their row number
#Mall_Customers <- which(is.na(Mall_Customers ), arr.ind=TRUE)[, 1]

#Filling missing values with their column number
#Mall_Customers [is.na(Mall_Customers )]<- which(is.na(Mall_Customers ), arr.ind=TRUE)[,2]

#Struture
str(Mall_Customers)
#Name of Column
names(Mall_Customers)
#Head(Checking the first 6rows)
head(Mall_Customers)
#Summary 
summary(Mall_Customers$Age)
summary(Mall_Customers$Annual_Income)
#Standard Deviation
sd(Mall_Customers$Age)
sd(Mall_Customers$Spending_Score)

#BarPlot 	
A = table(Mall_Customers$Gender)
barplot(A,main="Using BarPlot to display Gender Comparision",
        ylab="Count",
        xlab="Gender",
        col=rainbow(2),
        legend=rownames(A))
#3D PieChart
PC=round(A/sum(A)*100)
RUG=paste(c("Female","Male")," ",PC,"%",sep=" ")
pie3D(A,labels=RUG, main="Pie Chart Depicting Ratio of Female and Male")

#Histogram	
hist(Mall_Customers$Age,
     col="blue",
     main="Histogram to Show Count of Age Class",
     xlab="Age Class",
     ylab="Frequency",
     labels=TRUE)

#Boxplot
boxplot(Mall_Customers$Age,
        col='#ff0066',
        main="Boxplot for Descriptive Analysis of Age")

#Histogram for Annual Income

hist(Mall_Customers$Annual_Income,
             col='#660033', 
             main='Histogram for Annual Income',
             xlab='Annual Income Class',
             ylab='Frequency',
             labels=TRUE)
        
#Density Plot for the Annual Income 
plot(density(Mall_Customers$Annual_Income,
                     col='yellow',
                     main='Density Plot for Annual Income',
                     xlab='Annual Income Class',
                     ylab='Density', col='#ccff66')
                             
                             
                             
                        
#Boxplot for Spending Score 
summary(Mall_Customers$Spending_Score)
boxplot(Mall_Customers$Spending_Score,
        horizontal=TRUE,
        col="#990000",
        main="BoxPlot for Descriptive Analysis of Spending Score")
        
                     
#Histogram for spending score 
hist(Mall_Customers$Spending_Score,
     main="HistoGram for Spending Score",
     xlab="Spending Score Class",
     ylab="Frequency",
     col="#6600cc",
     labels=TRUE)
                             
                     

#classifying into 10 clusters using the elbow method
library(purrr)
set.seed(123)
# function to calculate total intra-cluster sum of square 
iss <- function(k) {
  kmeans(Mall_Customers[,3:5],k,iter.max=100,nstart=100,algorithm="Lloyd" )$tot.withinss
}
k.values <- 1:10
iss_values <- map_dbl(k.values, iss)
plot(k.values, iss_values,
     type="b", pch = 19, frame = FALSE, 
     xlab="Number of clusters K",
     ylab="Total intra-clusters sum of squares")



#Using the Silhouette method using K2
library(cluster) 
library(gridExtra)
library(grid)
k2<-kmeans(Mall_Customers[,3:5],2,iter.max=100,nstart=50,algorithm="Lloyd")
s2<-plot(silhouette(k2$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K3
k3<-kmeans(Mall_Customers[,3:5],3,iter.max=100,nstart=50,algorithm="Lloyd")
s3<-plot(silhouette(k3$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K4
k4<-kmeans(Mall_Customers[,3:5],4,iter.max=100,nstart=50,algorithm="Lloyd")
s4<-plot(silhouette(k4$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K5

k5<-kmeans(Mall_Customers[,3:5],5,iter.max=100,nstart=50,algorithm="Lloyd")
s5<-plot(silhouette(k5$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K6
k6<-kmeans(Mall_Customers[,3:5],6,iter.max=100,nstart=50,algorithm="Lloyd")
s6<-plot(silhouette(k6$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K7
k7<-kmeans(Mall_Customers[,3:5],7,iter.max=100,nstart=50,algorithm="Lloyd")
s7<-plot(silhouette(k7$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K7
k8<-kmeans(Mall_Customers[,3:5],8,iter.max=100,nstart=50,algorithm="Lloyd")
s8<-plot(silhouette(k8$cluster,dist(Mall_Customers[,3:5],"euclidean")))

#Using the Silhouette method using K7
k9<-kmeans(Mall_Customers[,3:5],9,iter.max=100,nstart=50,algorithm="Lloyd")
s9<-plot(silhouette(k9$cluster,dist(Mall_Customers[,3:5],"euclidean")))

install.packages('ggsignif')
install.packages('labeling')
install.packages('farver')
library(farver)
library(ggsignif)
library(labeling)
library(NbClust)
library(factoextra)
fviz_nbclust(Mall_Customers[,3:5], kmeans, method = 	"silhouette")

#Using Gap Statistic Method
set.seed(125)
stat_gap <- clusGap(Mall_Customers[,3:5], FUN = kmeans, nstart 	= 25,
                    K.max = 10, B = 50)
fviz_gap_stat(stat_gap)


k6<-kmeans(Mall_Customers[,3:5],6,iter.max=100,nstart=50,algorithm='Lloyd')
k6

pcclust=prcomp(Mall_Customers[,3:5],scale=FALSE) #principal 	component analysis
summary(pcclust)
pcclust$rotation[,1:2]



#Clustering by income and spending score 
set.seed(1)
ggplot(Mall_Customers, aes(x =Annual_Income, y = Spending_Score)) + 
  geom_point(stat = "identity", aes(color = as.factor(k6$cluster))) +
  scale_color_discrete(name=" ",
                       breaks=c("1", "2", "3", "4", "5","6"),
                       labels=c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5","Cluster 6")) +
  ggtitle("Segments of Mall Customers", subtitle = "Using K-means Clustering")

#Clustering by Spending score and Age
ggplot(Mall_Customers, aes(x =Spending_Score, y =Age)) + 
  geom_point(stat = "identity", aes(color = as.factor(k6$cluster))) +
  scale_color_discrete(name=" ",
                       breaks=c("1", "2", "3", "4", "5","6"),
                       labels=c("Cluster 1", "Cluster 2", "Cluster 3", "Cluster 4", "Cluster 5","Cluster 6")) +
  ggtitle("Segments of Mall Customers", subtitle = "Using K-means Clustering")


kCols=function(vec){cols=rainbow (length (unique (vec)))
return (cols[as.numeric(as.factor(vec))])}
digCluster<-k6$cluster; dignm<-as.character(digCluster); # K-means clusters
plot(pcclust$x[,1:2], col =kCols(digCluster),pch =19,xlab ="K-means",ylab="classes")
legend("bottomleft",unique(dignm),fill=unique(kCols(digCluster)))





